what = "polygons"
) %>%
st_as_sf() %>%
st_cast("POLYGON") %>%
st_transform(crs = "EPSG:4326")
grid.ee <- sf_as_ee(grid.sf)
Map$addLayer(grid.ee)
mapview::mapview(countries)
mapview::mapview(grid.sf)
# 2. Load data ----
countries.sf <-
st_read("data/vector/PaisesSimplificados.shp") %>%
st_transform(crs = "EPSG:32718")
# 3. Create Grid ----
grid.sf <-
st_make_grid(
x = countries,
cellsize = 30000,
what = "polygons"
) %>%
st_as_sf() %>%
st_cast("POLYGON") %>%
st_transform(crs = "EPSG:4326") %>%
st_within(countries.sf)
# 3. Create Grid ----
grid.sf <-
st_make_grid(
x = countries,
cellsize = 30000,
what = "polygons"
) %>%
st_as_sf() %>%
st_cast("POLYGON") %>%
st_within(countries.sf) %>%
st_transform(crs = "EPSG:4326")
grid.sf <-
st_make_grid(
x = countries.sf,
cellsize = 30000,
what = "polygons"
) %>%
st_as_sf() %>%
st_cast("POLYGON") %>%
st_within(countries.sf)
grid.sf
features <- st_within(grid.sf, countries.sf)
# 3. Create Grid ----
grid.sf <-
st_make_grid(
x = countries.sf,
cellsize = 30000,
what = "polygons"
) %>%
st_as_sf()
features <- st_within(grid.sf, countries.sf)
# 3. Create Grid ----
globalGrid.sf <-
st_make_grid(
x = countries.sf,
cellsize = 30000,
what = "polygons"
) %>%
st_as_sf()
features <- st_within(globalGrid.sf, countries.sf)
styler:::style_selection()
features
as.logical(features)
debugSource("~/Documents/AndesDataCube/tiling.R", echo=TRUE)
features
grid.sf <- globalGrid.sf[as.logical(features), ]
grid.sf
balGrid.sf, countries.sf)
as.logical(features)
class(as.logical(features))
grid.sf <- globalGrid.sf[as.logical(features), ]
grid.sf
grid.sf <- globalGrid.sf[as.logical(features), ] %>% st_as_sf()
grid.sf
features2 <- st_intersects(globalGrid.sf, countries.sf)
features2
as.logical(features)
features2 <- st_intersects(globalGrid.sf, countries.sf, sparse = FALSE)[, 1]
features2 <- st_intersects(globalGrid.sf, countries.sf)
grid.sf <- globalGrid.sf[as.logical(features2), ]
features2 <- st_intersects(globalGrid.sf, countries.sf)
as.logical(features2)
features2
features2 <- st_intersects(globalGrid.sf, countries.sf, sparse = FALSE)[, 1]
grid.sf <- globalGrid.sf[as.logical(features2), ]
grid.sf
grid.ee <- sf_as_ee(grid.sf)
mapview::mapview(grid.sf)
mapview::mapview(countries.sf)
features2 <- st_intersects(globalGrid.sf, countries.sf, sparse = FALSE)
grid.sf <- globalGrid.sf[as.logical(features2), ]
mapview::mapview(grid.sf)
features2
grid.sf <- globalGrid.sf[features2, ]
grid.sf
mapview::mapview(grid.sf)
# 2. Load data ----
countries.sf <-
st_read("data/vector/PaisesSimplificados.shp") %>%
st_transform(crs = "EPSG:32718")
mapview::mapview(countries.sf)
countries.sf
class(features2)
as.logical(features2)
(features2)
as.logical(features2)
as.logical(features2) %>% class()
as.logical(features2) %>% is.vector()
grid.sf <- globalGrid.sf[as.logical(features2), ]
grid.sf
mapview::mapview(grid.sf)
plot(grid.sf)
globalGrid.sf
countries.sf
globalGrid.sf
features2 <- st_intersects(globalGrid.sf, countries.sf, sparse = FALSE)
features2
head(features2)
dim(features2)
globalGrid.sf
st_union(countries.sf) %>% plot()
st_union(countries.sf) %>% plot()
features2 <- st_intersects(globalGrid.sf, st_union(countries.sf))
head(features2)
features2
features2 <- st_intersects(globalGrid.sf, st_union(countries.sf), sparse = FALSE)
features2
head(features2)
grid.sf <- globalGrid.sf[features2, ]
mapview::mapview(grid.sf)
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
grid.sf <-
dplyr::filter(globalGrid.sf, features) %>%
st_transform(crs = "EPSG:4326")
grid.sf <-
dplyr::filter(globalGrid.sf, features) %>%
st_transform(crs = "EPSG:4326")
globalGrid.sf
features
features <-
st_intersects(
x = globalGrid.sf,
y = st_union(countries.sf),
sparse = FALSE
)
grid.sf <-
dplyr::filter(globalGrid.sf, features) %>%
st_transform(crs = "EPSG:4326")
globalGrid.sf
grid.sf <-
mutate(globalGrid.sf, status = index) %>%
dplyr::filter(globalGrid.sf, status == TRUE) %>%
st_transform(crs = "EPSG:4326")
index <-
st_intersects(
x = globalGrid.sf,
y = st_union(countries.sf),
sparse = FALSE
)
grid.sf <-
mutate(globalGrid.sf, status = index) %>%
dplyr::filter(globalGrid.sf, status == TRUE) %>%
st_transform(crs = "EPSG:4326")
index
class(index)
index <-
st_intersects(
x = globalGrid.sf,
y = st_union(countries.sf),
sparse = FALSE
) %>%
as.logical()
grid.sf <-
mutate(globalGrid.sf, status = index) %>%
dplyr::filter(globalGrid.sf, status == TRUE) %>%
st_transform(crs = "EPSG:4326")
globalGrid.sf
mutate(globalGrid.sf, status = index)
grid.sf <-
mutate(globalGrid.sf, status = index) %>%
dplyr::filter(status == TRUE) %>%
st_transform(crs = "EPSG:4326")
grid.sf
grid.ee <- sf_as_ee(grid.sf)
mapview::mapview(grid.sf)
Map$addLayer(grid.ee)
elev.threshold <- 4000
# Parameters
elev.threshold <- 4000
size.grid <- 30000
# 4. Build mask from elevation ----
mask.srtm <- srtm$gt(elev.threshold)
# 4. Build mask from elevation ----
mask <- srtm$gt(elev.threshold)
styler:::style_selection()
srtm.masked <-
srtm$updateMask(
srtm$gt(elev.threshold)
)
# 4. Build mask from elevation ----
mask <- srtm$gt(elev.threshold)
Map$addLayer(mask)
styler:::style_selection()
# vectorize
polygonized <-
mask$reduceToVectors(
geometryType = "polygon",
scale = 90,
eightConnected = FALSE,
labelProperty = "elevation",
maxPixels = 1e13
)
polygonized
Map$addLayer(polygonized)
countries.ee <- st_union(countries.sf) %>% sf_as_ee()
countries.ee
polygonized <-
mask$
clip(countries.ee)
Map$addLayer(polygonized)
# 4. Build mask from elevation ----
# raster mask
mask <- srtm$gt(elev.threshold)$equal(1)
# 4. Build mask from elevation ----
# raster mask
mask <- srtm$gt(elev.threshold)$eq(1)
Map$addLayer(mask)
mask <- srtm$gt(elev.threshold)$multiply(1)$eq(1)
Map$addLayer(mask)
mask <- srtm$gt(elev.threshold)
mask
# 4. Build mask from elevation ----
# raster mask
mask <- srtm$gt(elev.threshold)$multiply(1)
Map$addLayer(mask)
mask <- srtm$gt(elev.threshold)
mask
Map$addLayer(mask$updateMask(mask))
Map$addLayer(mask$updateMask(mask)$multiply(1))
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
# 4. Build mask from elevation ----
# raster mask
region <-
srtm$
gt(elev.threshold)$
updateMask(
srtm$gt(elev.threshold)
)
Map$addLayer(region)
mask <-
srtm$
clip(countries.ee)$
gt(elev.threshold)
region <- mask$updateMask(mask)
# 4. Build mask from elevation ----
# raster mask
mask <-
srtm$
clip(countries.ee)$
gt(elev.threshold)
region <- mask$updateMask(mask)
Map$addLayer(region)
Map$addLayer(region, "red")
Map$addLayer(region, list(color = "red"))
Map$addLayer(region, list(palette = "red"))
region
# vectorize
polygonized <-
region$
reduceToVectors(
geometryType = "polygon",
scale = 90,
eightConnected = TRUE,
labelProperty = "elevation",
maxPixels = 1e13
)
Map$addLayer(polygonized, list(palette = "red"))
Feature <- ee_as_sf(polygonized)
polygonized
polygonized
Feature <- ee_as_sf(polygonized)
# Initialize GEE
ee_Initialize("datasetfprudencio", drive = TRUE, gcs = T)
Feature <- ee_as_sf(polygonized)
Feature <- ee_as_sf(polygonized, maxFeatures = 1e13)
Feature
mapview::mapview(Feature)
# vectorize
region.ee <-
region$
reduceToVectors(
geometryType = "polygon",
scale = 90,
eightConnected = TRUE,
labelProperty = "elevation",
maxPixels = 1e13
)
styler:::style_selection()
# vectorize
region.ee <-
region$
reduceToVectors(
geometryType = "polygon",
scale = 90,
eightConnected = TRUE,
labelProperty = "elevation",
maxPixels = 1e13
)
region.sf <-
ee_as_sf(
x = polygonized,
maxFeatures = 1e13
)
countries.sf
# 4. Create Grid ----
# grid over full extensions
globalGrid.sf <-
st_make_grid(
x = region.sf,
cellsize = size.grid,
what = "polygons"
) %>%
st_as_sf()
mapview::mapview(globalGrid.sf)
mapview::mapview(region.sf)
plot(region.sf)
region.sf
# 4. Create Grid ----
# grid over full extensions
globalGrid.sf <-
st_make_grid(
x = st_transform(region.sf, crs = "EPSG:32718"),
cellsize = size.grid,
what = "polygons"
) %>%
st_as_sf()
mapview::mapview(globalGrid.sf)
index <-
st_intersects(
x = globalGrid.sf,
y = region.sf,
sparse = FALSE
) %>%
as.logical()
mutate(globalGrid.sf, status = index) %>%
dplyr::filter(status == TRUE)
globalGrid.sf
# grid over countries
index <-
st_intersects(
x = globalGrid.sf,
y = region.sf,
sparse = FALSE
) %>%
as.logical()
globalGrid.sf
region.sf
# grid over countries
index <-
st_intersects(
x = globalGrid.sf,
y = st_transform(region.sf, crs = "EPSG:32718"),
sparse = FALSE
) %>%
as.logical()
grid.sf <-
mutate(globalGrid.sf, status = index) %>%
dplyr::filter(status == TRUE) %>%
st_transform(crs = "EPSG:4326")
index
mutate(globalGrid.sf, status = index)
globalGrid.sf
mutate(globalGrid.sf, status = index)
index
region.sf <-
ee_as_sf(
x = polygonized,
maxFeatures = 1e13
) %>%
st_transform(crs = "EPSG:32718")
# 4. Create Grid ----
# grid over full extensions
globalGrid.sf <-
st_make_grid(
x = region.sf,
cellsize = size.grid,
what = "polygons"
) %>%
st_as_sf()
globalGrid.sf
# grid over countries
index <-
st_intersects(
x = globalGrid.sf,
y = st_union(region.sf),
sparse = FALSE
) %>%
as.logical()
index
class(index)
grid.sf <-
mutate(globalGrid.sf, status = index) %>%
dplyr::filter(status == TRUE) %>%
st_transform(crs = "EPSG:4326")
mapview::mapview(grid.sf)
andes.sf <- mapedit::drawFeatures()
andes.ee <- sf_as_ee(andes.sf)
andes.ee
mask <-
srtm$
clip(andes.ee)$
gt(elev.threshold)
region <- mask$updateMask(mask)
region
# vectorize
region.ee <-
region$
reduceToVectors(
geometryType = "polygon",
scale = 90,
eightConnected = TRUE,
labelProperty = "elevation",
maxPixels = 1e13
)
region.sf <-
ee_as_sf(
x = polygonized,
maxFeatures = 1e13
) %>%
st_transform(crs = "EPSG:32718")
grid.sf <-
mutate(globalGrid.sf, status = index) %>%
dplyr::filter(status == TRUE) %>%
st_transform(crs = "EPSG:4326")
# 4. Create Grid ----
# grid over full extensions
globalGrid.sf <-
st_make_grid(
x = region.sf,
cellsize = size.grid,
what = "polygons"
) %>%
st_as_sf()
globalGrid.sf
mapview::mapview(globalGrid.sf)
grid.sf <-
mutate(globalGrid.sf, status = index) %>%
dplyr::filter(status == TRUE) %>%
st_transform(crs = "EPSG:4326")
# grid over countries
index <-
st_intersects(
x = globalGrid.sf,
y = st_union(region.sf),
sparse = FALSE
) %>%
as.logical()
mapview::mapview(grid.sf)
grid.sf <-
mutate(globalGrid.sf, status = index) %>%
dplyr::filter(status == TRUE)
grid.sf
1200 * 30
1000 * 30
18000/30
styler:::style_selection()
grid.sf <-
mutate(globalGrid.sf, status = index) %>%
dplyr::filter(status == TRUE) %>%
st_centroid() %>%
st_buffer(
dist = 18000,
endCapStyle = "SQUARE"
) %>%
st_transform(crs = "EPSG:4326")
grid.sf <-
grid.sf <-
mutate(globalGrid.sf, status = index) %>%
dplyr::filter(status == TRUE) %>%
st_centroid() %>%
st_buffer(
dist = 18000,
endCapStyle = "SQUARE"
) %>%
st_transform(crs = "EPSG:4326")
grid.sf
mapview::mapview(grid.sf)
st_write(
obj = grid.sf,
dsn = "data/vector/dbase.gpkg",
layer = "tiling"
)
size.buffer <- 18000
grid.sf <-
mutate(globalGrid.sf, status = index) %>%
dplyr::filter(status == TRUE) %>%
st_centroid() %>%
st_buffer(
dist = size.buffer,
endCapStyle = "SQUARE"
) %>%
st_transform(crs = "EPSG:4326")
mapview::mapview(grid.sf)
grid.sf
